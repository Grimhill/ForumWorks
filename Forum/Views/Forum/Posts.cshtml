@model PagedList.IPagedList<Forum.Models.ForumViewModel>
@using PagedList.Mvc;
@using Forum.Controllers
<link href="~/Content/css/PagedList.css" rel="stylesheet" />

@{
    ForumController forumCtrl = new ForumController();
    int postnum = 0;
}

<div style="overflow:hidden;width:100%;">
    <table style="float:right;">
        <tr>
            <th>Sort by :</th>
            <th>
                @using (Html.BeginForm("Index", "Forum", FormMethod.Get))
                {
                    if (ViewBag.CurrentSearchCategory != null)
                    {
                        foreach (var item in ViewBag.CurrentSearchCategory)
                        {
                            <input type="hidden" name="searchCategory" value="@item" />
                        }
                    }
                    if (ViewBag.CurrentSearchTag != null)
                    {
                        foreach (var item in ViewBag.CurrentSearchTag)
                        {
                            <input type="hidden" name="searchTag" value="@item" />
                        }
                    }
                    <input type="hidden" name="searchString" value="@ViewBag.CurrentSearchString" />
                    <input type="hidden" name="sortOrder" value="@ViewBag.DateSortParm" />
                    <input class="submitBtnLink" type="submit" value="Date" />
                }
            </th>
            <th class="tableBest">
                @using (Html.BeginForm("Index", "Forum", FormMethod.Get))
                {
                    if (ViewBag.CurrentSearchCategory != null)
                    {
                        foreach (var item in ViewBag.CurrentSearchCategory)
                        {
                            <input type="hidden" name="searchCategory" value="@item" />
                        }
                    }
                    if (ViewBag.CurrentSearchTag != null)
                    {
                        foreach (var item in ViewBag.CurrentSearchTag)
                        {
                            <input type="hidden" name="searchTag" value="@item" />
                        }
                    }
                    <input type="hidden" name="searchString" value="@ViewBag.CurrentSearchString" />
                    <input type="hidden" name="sortOrder" value="@ViewBag.BestSortParm" />
                    <input class="submitBtnLink" type="submit" value="Best||All" />
                }
            </th>
        </tr>
    </table>
</div>



@foreach (var post in Model)
{
    postnum++;
    var total = post.PostLikes - post.PostDislikes;
    <div class="postDescContainer">

        <div class="postPubDate">
            <div>@post.PostedOn.ToString("dd-MM-yyyy")</div>
        </div>
        <a href="#">
            <div class="postDescTitle"><h3>@Html.ActionLink(@post.Title, "Post", "Forum", new { slug = @post.UrlSlug }, null)</h3></div>
        </a>
        <label>Author:&nbsp;</label>
        @Html.Raw(post.Author)
        <br />
        <div class="postDescCategory">
            <label>Category:&nbsp;</label>
            @{
                var postCats = forumCtrl.GetPostCategories(post.Post.Id);
                int postcatnum = 0;
                foreach (var cat in postCats)
                {
                    postcatnum++;
                    <a href="#">
                        <div class="postDescCatNames">
                            @cat.Name@if (postcatnum < postCats.Count())
                            {
                                @Html.Raw(",&nbsp;")
                            }
                        </div>
                    </a>
                }
            }
        </div>
        <div class="postDescCategory">
            <label>Tags:&nbsp;</label>
            @{
                var postTags = forumCtrl.GetPostTags(post.Post.Id);
                int postTagsnum = 0;
                foreach (var tag in postTags)
                {
                    postTagsnum++;
                    <a href="#">
                        <div class="postDescCatNames">
                            @tag.Name@if (postTagsnum < postTags.Count())
                            {
                                @Html.Raw(",&nbsp;")
                            }
                        </div>
                    </a>
                }
            }
        </div>
        <div class="postDescBody">
            <label>Description:&nbsp;</label>
            @Html.Raw(post.ShortDescription)
        </div>

        <div class="randLine" style="display:inline-block">
            @Html.ActionLink("Read More...", "Post", "Forum", new { slug = @post.UrlSlug }, null)
            <p style="text-shadow:inherit; font-style:italic">Post rating: @total</p>
        </div>
        <div class="randLine" style="display:inline-block;float:right">
            <table class="postLikes">
                <tr align="right">
                    <td id="PostLike">@post.PostLikes</td>
                    <td id="PostDislike">@post.PostDislikes</td>
                </tr>
            </table>
        </div>
    </div>
  }

<div id="spacer"></div>
<div class="paging">
    <div class="pagenum">
        Page @(Model.PageCount < Model.PageNumber ? 0 : Model.PageNumber) of @Model.PageCount
    </div>
    @{
        List<string> searchCatList = new List<string>();
        List<string> searchTagList = new List<string>();
        if (ViewBag.CurrentSearchCategory != null)
        {
            foreach (var item in ViewBag.CurrentSearchCategory)
            {
                searchCatList.Add(item);
            }
        }
        if (ViewBag.CurrentSearchTag != null)
        {
            foreach (var item in ViewBag.CurrentSearchTag)
            {
                searchTagList.Add(item);
            }
        }
    }
    @if (ViewBag.CurrentSearchCategory != null || ViewBag.CurrentSearchTag != null)
    {
        @Html.PagedListPager(Model, page => Url.Action("Index", "Forum", new { page, sortOrder = ViewBag.CurrentSort, searchString = ViewBag.SearchString }) + "?" + string.Join("&", searchCatList.Select(x => "searchCategory=" + x)) + "&" + string.Join("&", searchTagList.Select(x => "searchTag=" + x)))
    }
    else
    {
        @Html.PagedListPager(Model, page => Url.Action("Index", "Forum", new { page, sortOrder = ViewBag.CurrentSort, searchString = ViewBag.SearchString }))
    }
</div>
